# 워크플로의 이름
name: Deploy GitHub Pages

# 워크플로 실행 조건 설정
on:
  # main 브랜치에 푸시될 때 워크플로 실행
  push:
    branches:
      - master

  # GitHub Actions 탭에서 수동으로 워크플로를 실행할 수 있도록 설정
  workflow_dispatch:

# Job 실행에 필요한 권한 설정
permissions:
  contents: read   # 저장소 내용을 읽기 위한 권한
  pages: write     # GitHub Pages에 배포하기 위한 권한 (필수)
  id-token: write  # OIDC 토큰 발행을 위한 권한 (필수)

# 실행될 Job들을 정의
jobs:
  # 사이트를 빌드하고 배포에 필요한 아티팩트를 생성하는 Job
  build:
    runs-on: ubuntu-latest # Job을 실행할 가상 환경 (Ubuntu 최신 버전 사용)

    # Job에서 실행될 단계들을 정의
    steps:
      # 1. Repository 코드 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 모든 커밋 히스토리 가져오기 (Jekyll 플러그인 등에 필요할 수 있음)

      # 2. Jekyll 실행을 위한 Ruby 환경 설정
      # GitHub Pages는 Jekyll을 Ruby 기반으로 실행합니다.
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Jekyll이 일반적으로 요구하는 Ruby 버전 (필요시 변경)
          bundler-cache: true # Gemfile.lock 파일이 있으면 종속성 자동 설치

      # 3. Gemfile에 명시된 Jekyll 및 관련 Gem(플러그인, 테마 등) 설치
      # 이 단계가 제대로 작동하려면 Repository 루트에 Gemfile 파일이 있어야 합니다.
      - name: Install Jekyll and Dependencies
        run: bundle install

      # 4. Jekyll을 사용하여 사이트 빌드
      # Markdown 파일과 설정을 바탕으로 정적 HTML, CSS 등을 생성합니다.
      # 결과물은 기본적으로 Repository 루트의 _site 폴더에 생성됩니다.
      - name: Jekyll Build Site
        run: bundle exec jekyll build
        env: # Jekyll 빌드 환경 변수 설정 (선택 사항)
          JEKYLL_ENV: production # 'production' 환경으로 빌드

      # 5. 빌드 결과물(아티팩트) 업로드
      # 다음 단계(deploy Job)에서 이 아티팩트를 다운받아 배포합니다.
      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Jekyll 빌드 결과물이 생성되는 폴더를 지정합니다.
          # Jekyll 기본 빌드 경로는 ./_site 입니다.
          path: _site

  # 업로드된 아티팩트를 GitHub Pages에 실제로 배포하는 Job
  # 이 Job은 'build' Job이 성공적으로 완료된 후에 실행됩니다.
  deploy:
    environment:
      name: github-pages # 배포 환경 이름 (GitHub Pages 사용 시 필수)
      url: ${{ steps.deployment.outputs.page_url }} # 배포 후 사이트 URL

    runs-on: ubuntu-latest # Job을 실행할 가상 환경

    # 이 Job은 'build' Job 완료 후 실행되어야 함을 명시
    needs: build

    # Job에서 실행될 단계들을 정의
    steps:
      # 1. 업로드된 아티팩트를 GitHub Pages에 배포하는 액션 실행
      - name: Deploy to GitHub Pages
        id: deployment # 이후 단계에서 이 스텝의 출력(outputs)을 참조할 수 있도록 ID 설정
        uses: actions/deploy-pages@v4 # GitHub Pages 공식 배포 액션 사용
        # 이 액션은 build Job에서 actions/upload-pages-artifact@v3로 업로드된 아티팩트를 자동으로 찾습니다.
